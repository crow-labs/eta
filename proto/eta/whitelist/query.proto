syntax = "proto3";
package crowlabs.eta.whitelist;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "eta/whitelist/params.proto";
import "eta/whitelist/whitelist.proto";
// this line is used by starport scaffolding # 1
import "eta/whitelist/member.proto";

option go_package = "github.com/crow-labs/eta/x/whitelist/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/crow-labs/eta/whitelist/params";
  }
  // Queries a Member by index.
	rpc Member(QueryGetMemberRequest) returns (QueryGetMemberResponse) {
		option (google.api.http).get = "/crow-labs/eta/whitelist/member/{addresss}";
	}

	// Queries a list of Member items.
	rpc MemberAll(QueryAllMemberRequest) returns (QueryAllMemberResponse) {
		option (google.api.http).get = "/crow-labs/eta/whitelist/member";
	}

// Queries a Whitelist by index.
	rpc Whitelist(QueryGetWhitelistRequest) returns (QueryGetWhitelistResponse) {
		option (google.api.http).get = "/crow-labs/eta/whitelist/whitelist/{whitelistId}";
	}

	// Queries a list of Whitelist items.
	rpc WhitelistAll(QueryAllWhitelistRequest) returns (QueryAllWhitelistResponse) {
		option (google.api.http).get = "/crow-labs/eta/whitelist/whitelist";
	}

// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetMemberRequest {
	  string addresss = 1;

}

message QueryGetMemberResponse {
	Member member = 1 [(gogoproto.nullable) = false];
}

message QueryAllMemberRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllMemberResponse {
	repeated Member member = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetWhitelistRequest {
	  uint64 whitelistId = 1;

}

message QueryGetWhitelistResponse {
	Whitelist whitelist = 1 [(gogoproto.nullable) = false];
}

message QueryAllWhitelistRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllWhitelistResponse {
	repeated Whitelist whitelist = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// this line is used by starport scaffolding # 3
